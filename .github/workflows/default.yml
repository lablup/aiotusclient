name: default

on: [push, pull_request]

jobs:
  lint-black:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools
        if [ -n "$GITHUB_HEAD_REF" ]; then
          export GHBRANCH="${GITHUB_HEAD_REF#refs/heads/}"
        else
          export GHBRANCH="${GITHUB_REF#refs/heads/}"
        fi
        set -e
        python -m pip install -U -r requirements/lint.txt
    - name: Lint with black
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/black-matcher.json"
        fi
        python -m black --check aiotusclient/
  lint-flake8:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools
        if [ -n "$GITHUB_HEAD_REF" ]; then
          export GHBRANCH="${GITHUB_HEAD_REF#refs/heads/}"
        else
          export GHBRANCH="${GITHUB_REF#refs/heads/}"
        fi
        set -e
        python -m pip install -U -r requirements/lint.txt
    - name: Lint with flake8
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/flake8-matcher.json"
        fi
        python -m flake8 aiotusclient/
  lint-isort:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools
        if [ -n "$GITHUB_HEAD_REF" ]; then
          export GHBRANCH="${GITHUB_HEAD_REF#refs/heads/}"
        else
          export GHBRANCH="${GITHUB_REF#refs/heads/}"
        fi
        set -e
        python -m pip install -U -r requirements/lint.txt
    - name: Lint with isort
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/isort-matcher.json"
        fi
        python -m isort --check-only aiotusclient/
  typecheck-mypy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-typecheck-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-pip-typecheck-
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools
        if [ -n "$GITHUB_HEAD_REF" ]; then
          export GHBRANCH="${GITHUB_HEAD_REF#refs/heads/}"
        else
          export GHBRANCH="${GITHUB_REF#refs/heads/}"
        fi
        echo "HEAD: ${GHBRANCH} (${GITHUB_REF}, ${GITHUB_HEAD_REF})"
        set -e
        python -m pip install -U -r requirements/typecheck.txt
    - name: Type check with mypy
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" -a -n "$GITHUB_HEAD_REF" ]; then
          echo "(skipping matchers for pull request from local branches)"
        else
          echo "::add-matcher::.github/workflows/mypy-matcher.json"
        fi
        python -m mypy --no-color-output aiotusclient/

  deploy-to-pypi:
      needs: [lint-black, typecheck-mypy]
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        env:
          REQUIREMENTS_FILE: build
        run: |
          python -m pip install -U pip setuptools
          python -m pip install -U -r requirements/lint.txt
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*